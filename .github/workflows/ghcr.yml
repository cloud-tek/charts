name: "ghcr"

on:
  workflow_call:
    inputs:
      version:
        description: "tool version"
        type: string
        required: true
      platform:
        description: "tool platform"
        type: string
        required: true
      charts:
        description: "list of charts to lint"
        type: string
        required: true
    secrets:
      GHCR_Token:
        required: true

jobs:
  ghcr:
    name: ghcr
    strategy:
      fail-fast: true
      matrix:
        chart: ${{ fromJson(inputs.charts) }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: "0"
    - name: install helm
      run: |
        wget https://get.helm.sh/helm-${{ inputs.version }}-${{ inputs.platform }}.tar.gz \
        && tar -xvzf helm-${{ inputs.version }}-${{ inputs.platform }}.tar.gz \
        && mv ./${{ inputs.platform }}/helm /usr/local/bin
      shell: bash
    - name: helm package
      shell: bash
      working-directory: ${{ github.workspace}}/${{ matrix.chart.id }}
      run: |
        helm package --destination ./output .
    - name: helm push
      shell: bash
      working-directory: ${{ github.workspace}}/${{ matrix.chart.id }}
      run: |
        for file in $(find ./output -type f -iname '*.tgz'); do
          echo "Pushing $file ==> oci://ghcr.io/cloud-tek ..."
          helm $file oci://ghcr.io/cloud-tek
        done

    # - name: helm lint
    #   shell: bash
    #   working-directory: ${{ github.workspace }}/${{ matrix.chart.id }}
    #   run: |
    #     helm lint
    # - name: helm template
    #   run: |
    #     helm template --values values.ci.yaml --output-dir output --debug test .
    #   shell: bash
    #   working-directory: ${{ github.workspace }}/${{ matrix.chart.id }}
    # - name: cat output/*.yaml
    #   run: |
    #     for file in $(find ./output -type f -iname '*.y*ml'); do
    #       cat $file
    #     done
    #   shell: bash
    #   working-directory: ${{ github.workspace }}/${{ matrix.chart.id }}
