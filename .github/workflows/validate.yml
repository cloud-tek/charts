name: validate

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  PLATFORM: linux-amd64
  HELM_VERSION: v3.8.1
  KUBECONFORM_VERSION: v0.4.13
  OPA_VERSION: v0.39.0
on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    types:
    - opened
    - reopened
    - synchronize
    - edited
    - closed
    branches:
    - main
    paths:
      - ".github/workflows/validate.yml"
      - "opa/**"
      - "service/**"
  workflow_dispatch:
    # inputs:
    #   environment:
    #     description: 'Environment'
    #     required: true
    #     default: 'dev'

jobs:
  template:
    name: template
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: diag
      run: |
        echo $PATH
      shell: bash
    - name: install helm
      run: |
        wget https://get.helm.sh/helm-$HELM_VERSION-$PLATFORM.tar.gz \
        && tar -xvzf helm-$HELM_VERSION-$PLATFORM.tar.gz \
        && mv ./$PLATFORM/helm /usr/local/bin
      shell: bash
    - name: helm lint
      run: |
        helm lint
      shell: bash
      working-directory: service
    - name: helm template
      run: |
        helm template --values values.ci.yaml --output-dir output --debug test .
      shell: bash
      working-directory: service
    - name: cat output/*.yaml
      run: |
        for file in $(find ./output -type f -iname '*.y*ml'); do
          cat $file
        done
      shell: bash
      working-directory: service
    - uses: actions/upload-artifact@v2
      with:
        name: manifests
        path: ${{ github.workspace }}/service/output/microservice/templates

  kubeconform:
    name: kubeconform
    runs-on: ubuntu-latest
    needs: template
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: manifests
    - name: diag
      run: |
        apt get install tree
        tree .
      shell: bash
    - name: install kubeconform
      run: |
        wget https://github.com/yannh/kubeconform/releases/download/$KUBECONFORM_VERSION/kubeconform-$PLATFORM.tar.gz \
        && tar -xvzf kubeconform-$PLATFORM.tar.gz \
        && mv kubeconform /usr/local/bin
    - name: kubeconform output/*.yaml
      run: |
        for file in $(find ./output -type f -iname '*.y*ml'); do
          kubeconform -verbose $file
        done
      shell: bash
      working-directory: service

  opa:
    name: opa
    runs-on: ubuntu-latest
    needs: template
    steps:
    - name: install opa
      run: |
        wget https://openpolicyagent.org/downloads/$OPA_VERSION/opa_linux_amd64_static \
        && mv opa_linux_amd64_static /usr/local/bin/opa \
        && chmod +x /usr/local/bin/opa
      shell: bash
    - name: opa test
      run: |
        opa --help
      shell: bash
      working-directory: service


    # https://github.com/marketplace/actions/deploy-ghost-theme
    # - name: diag
    #   run: |
    #     sudo apt install tree --yes
    #     pwd
    #     tree ${{ github.workspace }}/dist
    #   shell: bash
    # - name: Deploy Ghost Theme (dev)
    #   if: (github.event_name != 'workflow_dispatch') || (github.event.inputs.environment == 'dev')
    #   uses: TryGhost/action-deploy-theme@v1.4.0
    #   with:
    #     theme-name: reset-newsfeed
    #     api-url: ${{ secrets.GHOST_DEV_ADMIN_API_URL }}
    #     api-key: ${{ secrets.GHOST_DEV_ADMIN_API_SECRET }}
    #     file: dist/production-ghost-newsfeed.zip
    # - name: Deploy Ghost Theme (xyz)
    #   if: (github.event_name == 'workflow_dispatch') && (github.event.inputs.environment == 'xyz')
    #   uses: TryGhost/action-deploy-theme@v1.4.0
    #   with:
    #     theme-name: reset-newsfeed
    #     api-url: ${{ secrets.GHOST_XYZ_ADMIN_API_URL }}
    #     api-key: ${{ secrets.GHOST_XYZ_ADMIN_API_SECRET }}
    #     file: dist/production-ghost-newsfeed.zip
